{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "90d804f9",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:34.467098Z",
     "iopub.status.busy": "2023-11-22T10:43:34.466014Z",
     "iopub.status.idle": "2023-11-22T10:43:34.916407Z",
     "shell.execute_reply": "2023-11-22T10:43:34.915197Z"
    },
    "papermill": {
     "duration": 0.466454,
     "end_time": "2023-11-22T10:43:34.919434",
     "exception": false,
     "start_time": "2023-11-22T10:43:34.452980",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/customer-segmentation-tutorial-in-python/Mall_Customers.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9648336",
   "metadata": {
    "papermill": {
     "duration": 0.009726,
     "end_time": "2023-11-22T10:43:34.939635",
     "exception": false,
     "start_time": "2023-11-22T10:43:34.929909",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "de1ae5c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:34.962686Z",
     "iopub.status.busy": "2023-11-22T10:43:34.961845Z",
     "iopub.status.idle": "2023-11-22T10:43:35.009984Z",
     "shell.execute_reply": "2023-11-22T10:43:35.008735Z"
    },
    "papermill": {
     "duration": 0.062551,
     "end_time": "2023-11-22T10:43:35.012647",
     "exception": false,
     "start_time": "2023-11-22T10:43:34.950096",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Female</td>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Gender  Age  Annual Income (k$)  Spending Score (1-100)\n",
       "CustomerID                                                         \n",
       "1             Male   19                  15                      39\n",
       "2             Male   21                  15                      81\n",
       "3           Female   20                  16                       6\n",
       "4           Female   23                  16                      77\n",
       "5           Female   31                  17                      40"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('/kaggle/input/customer-segmentation-tutorial-in-python/Mall_Customers.csv', index_col=0)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94c65e1f",
   "metadata": {
    "papermill": {
     "duration": 0.009841,
     "end_time": "2023-11-22T10:43:35.032860",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.023019",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Understand Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e64b7dc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:35.055139Z",
     "iopub.status.busy": "2023-11-22T10:43:35.054677Z",
     "iopub.status.idle": "2023-11-22T10:43:35.076734Z",
     "shell.execute_reply": "2023-11-22T10:43:35.075457Z"
    },
    "papermill": {
     "duration": 0.03645,
     "end_time": "2023-11-22T10:43:35.079578",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.043128",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 200 entries, 1 to 200\n",
      "Data columns (total 4 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   Gender                  200 non-null    object\n",
      " 1   Age                     200 non-null    int64 \n",
      " 2   Annual Income (k$)      200 non-null    int64 \n",
      " 3   Spending Score (1-100)  200 non-null    int64 \n",
      "dtypes: int64(3), object(1)\n",
      "memory usage: 7.8+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0afbc5a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:35.102428Z",
     "iopub.status.busy": "2023-11-22T10:43:35.102030Z",
     "iopub.status.idle": "2023-11-22T10:43:35.123618Z",
     "shell.execute_reply": "2023-11-22T10:43:35.122652Z"
    },
    "papermill": {
     "duration": 0.035865,
     "end_time": "2023-11-22T10:43:35.125972",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.090107",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>200.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>200.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>38.850000</td>\n",
       "      <td>60.560000</td>\n",
       "      <td>50.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>13.969007</td>\n",
       "      <td>26.264721</td>\n",
       "      <td>25.823522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>28.750000</td>\n",
       "      <td>41.500000</td>\n",
       "      <td>34.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>36.000000</td>\n",
       "      <td>61.500000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>73.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>70.000000</td>\n",
       "      <td>137.000000</td>\n",
       "      <td>99.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age  Annual Income (k$)  Spending Score (1-100)\n",
       "count  200.000000          200.000000              200.000000\n",
       "mean    38.850000           60.560000               50.200000\n",
       "std     13.969007           26.264721               25.823522\n",
       "min     18.000000           15.000000                1.000000\n",
       "25%     28.750000           41.500000               34.750000\n",
       "50%     36.000000           61.500000               50.000000\n",
       "75%     49.000000           78.000000               73.000000\n",
       "max     70.000000          137.000000               99.000000"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "91be0631",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:35.149706Z",
     "iopub.status.busy": "2023-11-22T10:43:35.148625Z",
     "iopub.status.idle": "2023-11-22T10:43:35.157864Z",
     "shell.execute_reply": "2023-11-22T10:43:35.157005Z"
    },
    "papermill": {
     "duration": 0.023577,
     "end_time": "2023-11-22T10:43:35.160230",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.136653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Female    112\n",
       "Male       88\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gender'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f916933",
   "metadata": {
    "papermill": {
     "duration": 0.010415,
     "end_time": "2023-11-22T10:43:35.181588",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.171173",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Visualize "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7cbca207",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:35.205464Z",
     "iopub.status.busy": "2023-11-22T10:43:35.204488Z",
     "iopub.status.idle": "2023-11-22T10:43:35.209565Z",
     "shell.execute_reply": "2023-11-22T10:43:35.208640Z"
    },
    "papermill": {
     "duration": 0.019785,
     "end_time": "2023-11-22T10:43:35.212041",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.192256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e02d9267",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:35.237726Z",
     "iopub.status.busy": "2023-11-22T10:43:35.237270Z",
     "iopub.status.idle": "2023-11-22T10:43:35.604767Z",
     "shell.execute_reply": "2023-11-22T10:43:35.603546Z"
    },
    "papermill": {
     "duration": 0.383297,
     "end_time": "2023-11-22T10:43:35.607384",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.224087",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='CustomerID'>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Annual Income (k$)'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1cbe0e73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:35.631944Z",
     "iopub.status.busy": "2023-11-22T10:43:35.631481Z",
     "iopub.status.idle": "2023-11-22T10:43:35.947571Z",
     "shell.execute_reply": "2023-11-22T10:43:35.946409Z"
    },
    "papermill": {
     "duration": 0.331506,
     "end_time": "2023-11-22T10:43:35.950303",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.618797",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: ylabel='Frequency'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Spending Score (1-100)'].plot(kind='hist')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "550784ad",
   "metadata": {
    "papermill": {
     "duration": 0.011801,
     "end_time": "2023-11-22T10:43:35.973982",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.962181",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "032ce3d2",
   "metadata": {
    "papermill": {
     "duration": 0.011547,
     "end_time": "2023-11-22T10:43:35.997444",
     "exception": false,
     "start_time": "2023-11-22T10:43:35.985897",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Feature Extraction\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "265a9814",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:36.024952Z",
     "iopub.status.busy": "2023-11-22T10:43:36.023532Z",
     "iopub.status.idle": "2023-11-22T10:43:36.031492Z",
     "shell.execute_reply": "2023-11-22T10:43:36.030531Z"
    },
    "papermill": {
     "duration": 0.024842,
     "end_time": "2023-11-22T10:43:36.034347",
     "exception": false,
     "start_time": "2023-11-22T10:43:36.009505",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# convert Gender to numeric\n",
    "df = pd.concat([df,pd.get_dummies(df['Gender'], drop_first=True)], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0bb658b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:36.061367Z",
     "iopub.status.busy": "2023-11-22T10:43:36.060490Z",
     "iopub.status.idle": "2023-11-22T10:43:36.069433Z",
     "shell.execute_reply": "2023-11-22T10:43:36.068350Z"
    },
    "papermill": {
     "duration": 0.024971,
     "end_time": "2023-11-22T10:43:36.071954",
     "exception": false,
     "start_time": "2023-11-22T10:43:36.046983",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns='Gender', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b74afe13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:36.098314Z",
     "iopub.status.busy": "2023-11-22T10:43:36.097318Z",
     "iopub.status.idle": "2023-11-22T10:43:36.109044Z",
     "shell.execute_reply": "2023-11-22T10:43:36.107993Z"
    },
    "papermill": {
     "duration": 0.027523,
     "end_time": "2023-11-22T10:43:36.111572",
     "exception": false,
     "start_time": "2023-11-22T10:43:36.084049",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "      <th>Male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Age  Annual Income (k$)  Spending Score (1-100)   Male\n",
       "CustomerID                                                        \n",
       "1            19                  15                      39   True\n",
       "2            21                  15                      81   True\n",
       "3            20                  16                       6  False\n",
       "4            23                  16                      77  False\n",
       "5            31                  17                      40  False"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "cdc56474",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:36.138380Z",
     "iopub.status.busy": "2023-11-22T10:43:36.137950Z",
     "iopub.status.idle": "2023-11-22T10:43:36.145020Z",
     "shell.execute_reply": "2023-11-22T10:43:36.143666Z"
    },
    "papermill": {
     "duration": 0.023278,
     "end_time": "2023-11-22T10:43:36.147577",
     "exception": false,
     "start_time": "2023-11-22T10:43:36.124299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Male'] = df['Male'].replace({True:1, False:0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d109486a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:36.174191Z",
     "iopub.status.busy": "2023-11-22T10:43:36.173765Z",
     "iopub.status.idle": "2023-11-22T10:43:36.188206Z",
     "shell.execute_reply": "2023-11-22T10:43:36.187392Z"
    },
    "papermill": {
     "duration": 0.030439,
     "end_time": "2023-11-22T10:43:36.190525",
     "exception": false,
     "start_time": "2023-11-22T10:43:36.160086",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "      <th>Male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>35</td>\n",
       "      <td>120</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>45</td>\n",
       "      <td>126</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>32</td>\n",
       "      <td>126</td>\n",
       "      <td>74</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>32</td>\n",
       "      <td>137</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>30</td>\n",
       "      <td>137</td>\n",
       "      <td>83</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Age  Annual Income (k$)  Spending Score (1-100)  Male\n",
       "CustomerID                                                       \n",
       "1            19                  15                      39     1\n",
       "2            21                  15                      81     1\n",
       "3            20                  16                       6     0\n",
       "4            23                  16                      77     0\n",
       "5            31                  17                      40     0\n",
       "...         ...                 ...                     ...   ...\n",
       "196          35                 120                      79     0\n",
       "197          45                 126                      28     0\n",
       "198          32                 126                      74     1\n",
       "199          32                 137                      18     1\n",
       "200          30                 137                      83     1\n",
       "\n",
       "[200 rows x 4 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04960e61",
   "metadata": {
    "papermill": {
     "duration": 0.012378,
     "end_time": "2023-11-22T10:43:36.215427",
     "exception": false,
     "start_time": "2023-11-22T10:43:36.203049",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4e04b484",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:36.244663Z",
     "iopub.status.busy": "2023-11-22T10:43:36.243960Z",
     "iopub.status.idle": "2023-11-22T10:43:37.998025Z",
     "shell.execute_reply": "2023-11-22T10:43:37.996872Z"
    },
    "papermill": {
     "duration": 1.771196,
     "end_time": "2023-11-22T10:43:38.000867",
     "exception": false,
     "start_time": "2023-11-22T10:43:36.229671",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "513c98a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:38.028315Z",
     "iopub.status.busy": "2023-11-22T10:43:38.027912Z",
     "iopub.status.idle": "2023-11-22T10:43:38.121629Z",
     "shell.execute_reply": "2023-11-22T10:43:38.120682Z"
    },
    "papermill": {
     "duration": 0.110485,
     "end_time": "2023-11-22T10:43:38.124294",
     "exception": false,
     "start_time": "2023-11-22T10:43:38.013809",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=5)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=5)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "km = KMeans(n_clusters = 5)\n",
    "km.fit(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "8b61bee4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:38.152847Z",
     "iopub.status.busy": "2023-11-22T10:43:38.152417Z",
     "iopub.status.idle": "2023-11-22T10:43:38.162452Z",
     "shell.execute_reply": "2023-11-22T10:43:38.161665Z"
    },
    "papermill": {
     "duration": 0.026922,
     "end_time": "2023-11-22T10:43:38.164800",
     "exception": false,
     "start_time": "2023-11-22T10:43:38.137878",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2,\n",
       "       0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 2,\n",
       "       0, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2,\n",
       "       1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2,\n",
       "       2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1,\n",
       "       1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 4, 3, 4, 3, 4, 3, 4, 3, 4,\n",
       "       3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,\n",
       "       3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,\n",
       "       3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,\n",
       "       3, 4], dtype=int32)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "preds = km.predict(df)\n",
    "preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "308bedf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:38.193275Z",
     "iopub.status.busy": "2023-11-22T10:43:38.192497Z",
     "iopub.status.idle": "2023-11-22T10:43:38.207265Z",
     "shell.execute_reply": "2023-11-22T10:43:38.205873Z"
    },
    "papermill": {
     "duration": 0.031898,
     "end_time": "2023-11-22T10:43:38.209836",
     "exception": false,
     "start_time": "2023-11-22T10:43:38.177938",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Annual Income (k$)</th>\n",
       "      <th>Spending Score (1-100)</th>\n",
       "      <th>Male</th>\n",
       "      <th>Segments</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>81</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23</td>\n",
       "      <td>16</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>31</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>35</td>\n",
       "      <td>120</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>45</td>\n",
       "      <td>126</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>32</td>\n",
       "      <td>126</td>\n",
       "      <td>74</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>32</td>\n",
       "      <td>137</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>30</td>\n",
       "      <td>137</td>\n",
       "      <td>83</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Age  Annual Income (k$)  Spending Score (1-100)  Male  Segments\n",
       "CustomerID                                                                 \n",
       "1            19                  15                      39     1         0\n",
       "2            21                  15                      81     1         2\n",
       "3            20                  16                       6     0         0\n",
       "4            23                  16                      77     0         2\n",
       "5            31                  17                      40     0         0\n",
       "...         ...                 ...                     ...   ...       ...\n",
       "196          35                 120                      79     0         4\n",
       "197          45                 126                      28     0         3\n",
       "198          32                 126                      74     1         4\n",
       "199          32                 137                      18     1         3\n",
       "200          30                 137                      83     1         4\n",
       "\n",
       "[200 rows x 5 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Segments'] = preds\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7990022a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:38.241014Z",
     "iopub.status.busy": "2023-11-22T10:43:38.239882Z",
     "iopub.status.idle": "2023-11-22T10:43:38.245656Z",
     "shell.execute_reply": "2023-11-22T10:43:38.244792Z"
    },
    "papermill": {
     "duration": 0.024645,
     "end_time": "2023-11-22T10:43:38.248065",
     "exception": false,
     "start_time": "2023-11-22T10:43:38.223420",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Clusters'] = preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "28598648",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:38.278611Z",
     "iopub.status.busy": "2023-11-22T10:43:38.277559Z",
     "iopub.status.idle": "2023-11-22T10:43:38.285244Z",
     "shell.execute_reply": "2023-11-22T10:43:38.283803Z"
    },
    "papermill": {
     "duration": 0.025949,
     "end_time": "2023-11-22T10:43:38.288100",
     "exception": false,
     "start_time": "2023-11-22T10:43:38.262151",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Segments'].replace({2:'high_earn_less_spend',\n",
    "                       1:'high_earn_high_spend',\n",
    "                       0:'mid_earn_mid_spend',\n",
    "                       3:'less_earn_high_spend',\n",
    "                       4:'less_earn_less_spend'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "90cf8c5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:38.317275Z",
     "iopub.status.busy": "2023-11-22T10:43:38.316858Z",
     "iopub.status.idle": "2023-11-22T10:43:39.186504Z",
     "shell.execute_reply": "2023-11-22T10:43:39.185557Z"
    },
    "papermill": {
     "duration": 0.887396,
     "end_time": "2023-11-22T10:43:39.189269",
     "exception": false,
     "start_time": "2023-11-22T10:43:38.301873",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "# Assuming your data is in a DataFrame named 'df'\n",
    "# If not, you can create a DataFrame using pd.DataFrame(your_data, columns=your_columns)\n",
    "# where your_data is the data you provided and your_columns is a list of column names\n",
    "\n",
    "# Scatter plot between 'Annual Income' and 'Spending Score' with color-coded clusters\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.scatterplot(x='Annual Income (k$)', y='Spending Score (1-100)', hue='Segments', data=df, palette='viridis',s=100)\n",
    "plt.title('Clusters based on Annual Income and Spending Score')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b45a898",
   "metadata": {
    "papermill": {
     "duration": 0.015263,
     "end_time": "2023-11-22T10:43:39.220295",
     "exception": false,
     "start_time": "2023-11-22T10:43:39.205032",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "0 -> high_earn_less_spend <br>\n",
    "1 -> high_earn_high_spend<br>\n",
    "2 -> mid_earn_mid_spend<br>\n",
    "3 -> less_earn_high_spend<br>\n",
    "4 -> less_earn_less_spend<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "49b1424e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:39.258111Z",
     "iopub.status.busy": "2023-11-22T10:43:39.257450Z",
     "iopub.status.idle": "2023-11-22T10:43:39.269850Z",
     "shell.execute_reply": "2023-11-22T10:43:39.268671Z"
    },
    "papermill": {
     "duration": 0.035714,
     "end_time": "2023-11-22T10:43:39.272086",
     "exception": false,
     "start_time": "2023-11-22T10:43:39.236372",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but KMeans was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([2], dtype=int32)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "km.predict([[21,15,81,1]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a44f658b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-22T10:43:39.305784Z",
     "iopub.status.busy": "2023-11-22T10:43:39.305326Z",
     "iopub.status.idle": "2023-11-22T10:43:39.314215Z",
     "shell.execute_reply": "2023-11-22T10:43:39.313082Z"
    },
    "papermill": {
     "duration": 0.02889,
     "end_time": "2023-11-22T10:43:39.316565",
     "exception": false,
     "start_time": "2023-11-22T10:43:39.287675",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Segments\n",
       "high_earn_high_spend    52\n",
       "high_earn_less_spend    50\n",
       "less_earn_less_spend    39\n",
       "less_earn_high_spend    38\n",
       "mid_earn_mid_spend      21\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Segments'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "369ae5f3",
   "metadata": {
    "papermill": {
     "duration": 0.015662,
     "end_time": "2023-11-22T10:43:39.410179",
     "exception": false,
     "start_time": "2023-11-22T10:43:39.394517",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b78567bb",
   "metadata": {
    "papermill": {
     "duration": 0.015596,
     "end_time": "2023-11-22T10:43:39.443026",
     "exception": false,
     "start_time": "2023-11-22T10:43:39.427430",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b33c8c7",
   "metadata": {
    "papermill": {
     "duration": 0.015864,
     "end_time": "2023-11-22T10:43:39.474746",
     "exception": false,
     "start_time": "2023-11-22T10:43:39.458882",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a6a505a",
   "metadata": {
    "papermill": {
     "duration": 0.015416,
     "end_time": "2023-11-22T10:43:39.507870",
     "exception": false,
     "start_time": "2023-11-22T10:43:39.492454",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 42674,
     "sourceId": 74935,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30587,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 9.301748,
   "end_time": "2023-11-22T10:43:40.245573",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-11-22T10:43:30.943825",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
